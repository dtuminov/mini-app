# Aiogram imports
from aiogram import Dispatcher, types, filters, Bot, F
from aiogram.enums import ParseMode
from aiogram.filters import StateFilter
from aiogram.fsm.state import any_state
from aiogram.types import ContentType
from aiogram.fsm.context import FSMContext

# DB
from database.orm import ORM as orm

# States
from states.main_states import AdminStates


# loader
def load_admin_statistic_handler(dispatcher: Dispatcher, bot: Bot):

	# init
	global g_bot
	g_bot = bot

	# Register handlers
	dispatcher.message.register(
		process_statistic,
		F.Text(equals = ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]),
		StateFilter(any_state)

	)


async def process_statistic(message: types.Message, state: FSMContext):
	
	all_users = await orm.get_all_users()

	cards_in_inventories = sum([len(x.inventory) for x in all_users])

	msg_text = f"""<i>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</i>

üîπ –ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ: {len(all_users)} —á–µ–ª.
üîπ –ö–æ–ª-–≤–æ –∫–∞—Ä—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è—Ö: {cards_in_inventories} —à—Ç.
üîπ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {len(await orm.get_active_users_byToday())} —á–µ–ª.
üîπ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {len(await orm.get_active_users_byWeek())} —á–µ–ª.
üîπ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü: {len(await orm.get_active_users_byMonth())} —á–µ–ª."""

	await message.answer(
		text = msg_text,
		parse_mode = ParseMode.HTML
	)
